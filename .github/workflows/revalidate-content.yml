# GitHub Actions 워크플로우 - 콘텐츠 변경 감지 및 서버 배포 알림
name: Content Revalidation and Deployment

on:
  push:
    branches: [main]
    paths:
      - 'content/posts/**/*.md'
      - 'content/pages/**/*.md'
  workflow_dispatch: # 수동 실행 가능

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            content/posts/**/*.md
            content/pages/**/*.md

      - name: Install jq
        if: steps.changed-files.outputs.any_changed == 'true'
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: List changed files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "📝 Content files changed:"
          echo "${{ steps.changed-files.outputs.all_changed_files }}"

      - name: Send webhook to server
        if: steps.changed-files.outputs.any_changed == 'true'
        env:
          WEBHOOK_SECRET: ${{ secrets.WEBHOOK_SECRET }}
          SERVER_WEBHOOK_URL: ${{ secrets.SERVER_WEBHOOK_URL }}
        run: |
          echo "🔔 Sending webhook to server..."
          
          # 환경변수 확인
          if [ -z "$WEBHOOK_SECRET" ]; then
            echo "❌ WEBHOOK_SECRET is not set"
            exit 1
          fi
          
          if [ -z "$SERVER_WEBHOOK_URL" ]; then
            echo "❌ SERVER_WEBHOOK_URL is not set"
            exit 1
          fi
          
          echo "📝 Environment variables verified"
          echo "🎯 Target URL: $SERVER_WEBHOOK_URL"
          
          # 변경된 파일 목록을 JSON 배열로 변환
          CHANGED_FILES_JSON=$(echo '${{ steps.changed-files.outputs.all_changed_files }}' | jq -R 'split(" ")')
          
          # 웹훅 페이로드 생성 (더 간단한 형태)
          PAYLOAD=$(cat <<EOF
          {
            "ref": "refs/heads/main",
            "repository": {
              "name": "${{ github.repository }}",
              "full_name": "${{ github.repository }}"
            },
            "commits": [
              {
                "id": "${{ github.sha }}",
                "message": "Content update via GitHub Actions",
                "modified": $CHANGED_FILES_JSON
              }
            ],
            "action": "content_update",
            "changed_files": $CHANGED_FILES_JSON
          }
          EOF
          )
          
          echo "📦 Payload prepared:"
          echo "$PAYLOAD" | jq .
          
          # HMAC 서명 생성
          SIGNATURE=$(echo -n "$PAYLOAD" | openssl dgst -sha256 -hmac "$WEBHOOK_SECRET" | cut -d' ' -f2)
          echo "🔐 Signature generated: sha256=$SIGNATURE"
          
          # 웹훅 전송
          echo "📡 Sending webhook..."
          HTTP_STATUS=$(curl -s -o /tmp/webhook_response.txt -w "%{http_code}" \
            -X POST \
            -H "Content-Type: application/json" \
            -H "X-Hub-Signature-256: sha256=$SIGNATURE" \
            -H "X-GitHub-Event: push" \
            -H "User-Agent: GitHub-Hookshot/manual" \
            -d "$PAYLOAD" \
            "$SERVER_WEBHOOK_URL")
          
          echo "📊 HTTP Status: $HTTP_STATUS"
          echo "📄 Response:"
          cat /tmp/webhook_response.txt || echo "No response body"
          
          if [ "$HTTP_STATUS" -eq 200 ]; then
            echo "✅ Webhook sent successfully (HTTP $HTTP_STATUS)"
          else
            echo "❌ Webhook failed (HTTP $HTTP_STATUS)"
            exit 1
          fi

      - name: Deployment summary
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "## 🚀 Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Changed files**: ${{ steps.changed-files.outputs.all_changed_files }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger time**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Expected deploy time**: ~2-3 minutes" >> $GITHUB_STEP_SUMMARY
          echo "- **Site URL**: https://greedient.kr" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Webhook sent to server" >> $GITHUB_STEP_SUMMARY
